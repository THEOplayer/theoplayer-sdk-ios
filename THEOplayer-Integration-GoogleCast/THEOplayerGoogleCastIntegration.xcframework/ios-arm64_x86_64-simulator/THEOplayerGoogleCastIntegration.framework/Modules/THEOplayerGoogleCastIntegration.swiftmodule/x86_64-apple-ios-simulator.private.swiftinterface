// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name THEOplayerGoogleCastIntegration
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import GoogleCast
import Swift
@_spi(Core) import THEOplayerSDK
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc(THEOplayerGoogleCastIntegrationFactory) public class GoogleCastIntegrationFactory : ObjectiveC.NSObject {
  public static func createIntegration(on player: THEOplayerSDK.THEOplayer, with config: THEOplayerSDK.CastConfiguration) -> any THEOplayerGoogleCastIntegration.CastIntegration
  @available(swift, obsoleted: 1.0)
  @objc public static func createIntegration(on player: THEOplayerSDK.THEOplayer, with config: THEOplayerSDK.CastConfiguration) -> any THEOplayerGoogleCastIntegration.CastIntegration_Objc
  @objc override dynamic public init()
  @objc deinit
}
public protocol CastIntegration : THEOplayerSDK.Integration {
  var casting: Swift.Bool { get }
  var error: THEOplayerSDK.CastError? { get }
  var receiverName: Swift.String? { get }
  var state: THEOplayerSDK.PlayerCastState? { get }
  var castButtonDelegate: (any GoogleCast.GCKUICastButtonDelegate)? { get }
  func setCastButtonDelegate(_ delegate: (any GoogleCast.GCKUICastButtonDelegate)?)
  func setConnectionDelegate(_ delegate: (any THEOplayerSDK.ChromecastConnectionDelegate)?)
  func start()
  func stop()
  func join()
  func leave()
  func addEventListener<E>(type: THEOplayerSDK.EventType<E>, listener: @escaping (E) -> ()) -> any THEOplayerSDK.EventListener where E : THEOplayerSDK.EventProtocol
  func removeEventListener<E>(type: THEOplayerSDK.EventType<E>, listener: any THEOplayerSDK.EventListener) where E : THEOplayerSDK.EventProtocol
}
@objc(THEOplayerCastIntegration) public protocol CastIntegration_Objc : THEOplayerSDK.Integration {
  @objc var casting: Swift.Bool { get }
  @objc(error) var error_Objc: THEOplayerSDK.CastError_Objc? { get }
  @objc var receiverName: Swift.String? { get }
  @objc(state) var state_Objc: THEOplayerSDK.PlayerCastState { get }
  @objc var castButtonDelegate: (any GoogleCast.GCKUICastButtonDelegate)? { get }
  @objc func setCastButtonDelegate(_ delegate: (any GoogleCast.GCKUICastButtonDelegate)?)
  @objc func setConnectionDelegate(_ delegate: (any THEOplayerSDK.ChromecastConnectionDelegate)?)
  @objc func start()
  @objc func stop()
  @objc func join()
  @objc func leave()
  @objc @discardableResult
  func addEventListener(type: Swift.String, listener: @escaping (THEOplayerSDK.ChromeCastEvent) -> ()) -> any THEOplayerSDK.EventListener
  @objc func removeEventListener(type: Swift.String, listener: any THEOplayerSDK.EventListener)
}
@_inheritsConvenienceInitializers @objc(THEOplayerCastIntegrationHelper) public class CastIntegrationHelper : ObjectiveC.NSObject {
  @available(*, deprecated, message: "Please use CAF V3 receivers. Google deprecated V2 receivers and encourages the migration to V3. THEOplayer GoogleCastIntegration module officially supports CAF V3 receivers only.")
  @objc public static var theoplayerV2ReceiverApplicationID: Swift.String
  @objc public static var defaultV3ReceiverApplicationID: Swift.String
  @objc public static func setGCKCastContextSharedInstanceWithDefaultCastOptions()
  @objc override dynamic public init()
  @objc deinit
}
